#include<stdio.h>
#include <stdlib.h>


	void d2b(){
	

	int decip[4];
	int rep=5;
	int n=1;
	
	// read ip address in decimal notation with dots
	printf("Enter 32-bit IP address in dotted decimal notation (xxx.xxx.xxx.xxx)\n: ");
	scanf ("%d.%d.%d.%d",&decip[1],&decip[2],&decip[3],&decip[4]);
    printf("\n\n\n\n\n");
	
	//the results of ip in binary
	printf ("The decip is: %d.%d.%d.%d\n",decip[1],decip[2],decip[3],decip[4]);
	printf ("The binip is:");
	
	while ( n < rep ){
		
	  //check ip validity
		if ( decip[n] > 255 || decip[n] < 0){
			printf("Invalid input string (incorrect numbers for IP address)\n");
		}

	   // convert each decimal group to binary
		int bin[32]; 
		int i=0;
		int dec=decip[n];
		   
		while ( dec > 0 ){
			bin[i++] = dec % 2;
			dec = dec / 2;
		}
		   

		int j = i-1;
			  
		while (j >= 0){
			printf("%d", bin[j]);
			j--;
		  }
		if (3 >= n){
		printf (".");
		}
		++n;
	
	}	
}
	
	void b2d(){
	

	int binip[4];
	int decip[4];
	int rep=5;
	int n=1;
	
	// read ip address in binary notation with dots
	printf("Enter 32-bit IP address in dotted binary notation (xxx.xxx.xxx.xxx)\n: ");
	scanf ("%d.%d.%d.%d",&binip[1],&binip[2],&binip[3],&binip[4]);
	
	printf("\n\n\n");
	
	while ( n < rep ){
		
        // only 0 and 1 accepted
		if ( binip[n] > 11111111 || binip[n] < 0){
			printf("Invalid input string (incorrect numbers for IP address)\n");
		}
		
		// convert each binary group to decimal number
		int dec=0;
		int base=1;
		int bin;
		int rem;
		
		bin = binip[n];
		int tmp = bin;
		
		while ( tmp > 0  ) {
		
		rem  = tmp % 10;
		dec  = dec + rem * base;
		tmp  = tmp / 10;
		base = base * 2;
	
		}
	
		decip[n] = dec;
		++n;
		
	}
	
	//the results of ip in decimal
    printf("\n\n\n\n\n");
	printf ("The binip is: %d.%d.%d.%d\n",binip[1],binip[2],binip[3],binip[4]);
	printf ("The decip is: %d.%d.%d.%d",decip[1],decip[2],decip[3],decip[4]);
}


int main()
{
	int choice;
	
	
	printf("Choose the option you want to do first:\n1.From binary to decimal\n2.From decimal to binary\n3.Exit\n");
	
	scanf("%d",&choice);

	switch(choice)
	{
		case 1: b2d();	break;  //execute the first void function
			
		case 2:d2b();	break;  //execute the second void function
		
		case 3:printf("Exiting program!\n"); exit(0); break; //quitting the program
            
		default: printf("Invalid choice!\n"); break;
			
	}
	
	return 0;
}
